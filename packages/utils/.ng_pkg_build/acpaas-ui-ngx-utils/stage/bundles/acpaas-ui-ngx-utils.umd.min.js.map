{
  "version": 3,
  "file": "acpaas-ui-ngx-utils.umd.min.js",
  "sources": [
    "ng://@acpaas-ui/ngx-utils/out/utils/to-uppercase.ts",
    "ng://@acpaas-ui/ngx-utils/out/labels/labels.pipe.ts",
    "ng://@acpaas-ui/ngx-utils/out/labels/labels.interpolation.ts",
    "ng://@acpaas-ui/ngx-utils/out/labels/labels.module.ts"
  ],
  "sourcesContent": [
    "export const toUpperCase = (value: any) => value.toString().toUpperCase();",
    "import { Pipe, PipeTransform } from '@angular/core';\n\nimport { interpolate } from './labels.interpolation';\nimport { ReplaceData, Label } from './labels.types';\n\n@Pipe({\n    name: 'interpolateLabel'\n})\nexport class InterpolateLabelPipe implements PipeTransform {\n    transform(label: string, replaceData: ReplaceData): string {\n        if (!replaceData || !label) {\n            return label;\n        }\n\n        return interpolate(label, replaceData);\n    }\n}\n\n@Pipe({\n    name: 'pluralizeLabel'\n})\nexport class PluralizeLabelPipe implements PipeTransform {\n    transform(label: Label|string, count: number): string {\n        if (!label || typeof label === 'string') {\n            return label as string;\n        }\n\n        return count === 1 ? label.singular : label.plural;\n    }\n}\n",
    "import { ReplaceData } from './labels.types';\n\nexport const interpolate = (label: string, replaceData?: ReplaceData): string => {\n    if (!replaceData) {\n        return label;\n    }\n\n    const escapeStringRegExp = prop => prop.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n    const pattern = new RegExp(`\\%{(${Object.keys(replaceData).map(escapeStringRegExp).join('|')})\\}`, 'g');\n\n    return label.replace(pattern, (match, prop) => replaceData[prop] ? String(replaceData[prop]) : '');\n};\n",
    "import { NgModule } from '@angular/core';\n\nimport { InterpolateLabelPipe, PluralizeLabelPipe } from './labels.pipe';\n\n@NgModule({\n    declarations: [\n        InterpolateLabelPipe,\n        PluralizeLabelPipe\n    ],\n    exports: [\n        InterpolateLabelPipe,\n        PluralizeLabelPipe\n    ]\n})\nexport class LabelsModule {\n}\n"
  ],
  "names": [
    "InterpolateLabelPipe",
    "prototype",
    "transform",
    "label",
    "replaceData",
    "pattern",
    "RegExp",
    "Object",
    "keys",
    "map",
    "prop",
    "replace",
    "join",
    "match",
    "String",
    "interpolate",
    "type",
    "Pipe",
    "args",
    "name",
    "PluralizeLabelPipe",
    "count",
    "singular",
    "plural",
    "LabelsModule",
    "NgModule",
    "declarations",
    "exports",
    "value",
    "toString",
    "toUpperCase"
  ],
  "mappings": "4TAAA,ICAAA,EAAA,WAAA,SAAAA,YASIA,EAAJC,UAAAC,UAAI,SAAUC,EAAeC,GACrB,OAAKA,GAAgBD,ECRF,SAACA,EAAeC,GACvC,IAAKA,EACD,OAAOD,EAGX,IACME,EAAU,IAAIC,OAAO,MAAOC,OAAOC,KAAKJ,GAAaK,IADhC,SAAAC,GAAQ,OAAAA,EAAKC,QAAQ,sBAAuB,UACYC,KAAK,KAA5F,KAAuG,KAEnG,OAAOT,EAAMQ,QAAQN,EAAS,SAACQ,EAAOH,GAAS,OAAAN,EAAYM,GAAQI,OAAOV,EAAYM,IAAS,KDIpFK,CAAYZ,EAAOC,GAHfD,KAXnB,iBAKA,CAAAa,KAACC,EAAAA,KAADC,KAAA,CAAM,CACFC,KAAM,uBAeV,IAAAC,EAAA,WAAA,SAAAA,YACIA,EAAJnB,UAAAC,UAAI,SAAUC,EAAqBkB,GAC3B,OAAKlB,GAA0B,iBAAVA,EAIJ,IAAVkB,EAAclB,EAAMmB,SAAWnB,EAAMoB,OAHxC,KAHZ,iBAHA,CAAAP,KAACC,EAAAA,KAADC,KAAA,CAAM,CACFC,KAAM,qBEnBV,IAAAK,EAAA,2BAIA,CAAAR,KAACS,EAAAA,SAADP,KAAA,CAAU,CACNQ,aAAc,CACV1B,EACAoB,GAEJO,QAAS,CACL3B,EACAoB,qBHXmB,SAACQ,GAAe,OAAAA,EAAMC,WAAWC"
}

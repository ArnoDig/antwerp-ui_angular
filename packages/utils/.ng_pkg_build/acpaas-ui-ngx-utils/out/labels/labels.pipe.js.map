{"version":3,"file":"labels.pipe.js","sourceRoot":"","sources":["labels.pipe.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AAEpD,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAMrD,MAAM;;;;;;IACF,SAAS,CAAC,KAAa,EAAE,WAAwB;QAC7C,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK,EAAE;YACxB,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;KAC1C;;;YAVJ,IAAI,SAAC;gBACF,IAAI,EAAE,kBAAkB;aAC3B;;;;;;;;;;;AAcD,MAAM;;;;;;IACF,SAAS,CAAC,KAAmB,EAAE,KAAa;QACxC,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACrC,yBAAO,KAAe,EAAC;SAC1B;QAED,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;KACtD;;;YAVJ,IAAI,SAAC;gBACF,IAAI,EAAE,gBAAgB;aACzB","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { interpolate } from './labels.interpolation';\nimport { ReplaceData, Label } from './labels.types';\n\n@Pipe({\n    name: 'interpolateLabel'\n})\nexport class InterpolateLabelPipe implements PipeTransform {\n    transform(label: string, replaceData: ReplaceData): string {\n        if (!replaceData || !label) {\n            return label;\n        }\n\n        return interpolate(label, replaceData);\n    }\n}\n\n@Pipe({\n    name: 'pluralizeLabel'\n})\nexport class PluralizeLabelPipe implements PipeTransform {\n    transform(label: Label|string, count: number): string {\n        if (!label || typeof label === 'string') {\n            return label as string;\n        }\n\n        return count === 1 ? label.singular : label.plural;\n    }\n}\n"]}